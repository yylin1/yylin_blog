<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OpenShift on Frank's Notes</title><link>https://blog.yylin.io/categories/openshift/</link><description>Recent content in OpenShift on Frank's Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Sat, 24 Sep 2022 21:40:40 +0800</lastBuildDate><atom:link href="https://blog.yylin.io/categories/openshift/index.xml" rel="self" type="application/rss+xml"/><item><title>單節點 OpenShift 部署與應用探討</title><link>https://blog.yylin.io/openshift/sno-installer/</link><pubDate>Sat, 24 Sep 2022 21:40:40 +0800</pubDate><guid>https://blog.yylin.io/openshift/sno-installer/</guid><description>&lt;p>OpenShift 4.9 開始正式推出提供單節點部署（Single Node OpenShift，SNO），以支援小型、全功能的企業級Kubernetes叢集的應用，常見客戶 POC 應用需求如資料中心伺服器資源有限情況下，單節點 OpenShift 部署型態能夠更容易處理，可協助企業擴充既有應用程式開發與部署規模，以及管理相關工作流程，更支援邊緣資料資料中心的執行需求。&lt;/p>
&lt;p>單節點部署可以使用 RHACM 或者在線的安裝引導進行安装，此篇以安裝引導進行 SNO 部署說明：&lt;/p>
&lt;h2 id="1-準備好本地的安裝環境">1. 準備好本地的安裝環境：&lt;/h2>
&lt;ul>
&lt;li>本文章使用 &lt;a class="link" href="https://access.redhat.com/zh_CN/content/4218151" target="_blank" rel="noopener"
>Red Hat Virtualization&lt;/a>虛擬化環境，部署 SNO 叢集的最低配置要求如 &lt;code>Prerequisite&lt;/code> 下表資訊&lt;/li>
&lt;li>生成 SSH 密鑰(用於SSH登陸)&lt;/li>
&lt;li>配置部署的虛擬機 IP 或使用DHCP配置叢集網路及 DNS 伺服器解析&lt;/li>
&lt;/ul>
&lt;h3 id="prerequisite">Prerequisite&lt;/h3>
&lt;p>&lt;strong>主機資源要求&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>CPU&lt;/th>
&lt;th>Memory&lt;/th>
&lt;th>Disk&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>8vCPU&lt;/td>
&lt;td>16GB&lt;/td>
&lt;td>120GB&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>Requirements for installing OpenShift on a single node - &lt;a class="link" href="https://docs.openshift.com/container-platform/4.10/installing/installing_sno/install-sno-preparing-to-install-sno.html#install-sno-requirements-for-installing-on-a-single-node_install-sno-preparing" target="_blank" rel="noopener"
>minimum resource requirements&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="dns-設定">&lt;strong>DNS 設定&lt;/strong>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Usage&lt;/th>
&lt;th>FQDN&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Kubernetes API&lt;/td>
&lt;td>api.&amp;lt;cluster_name&amp;gt;.&amp;lt;base_domain&amp;gt;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Internal API&lt;/td>
&lt;td>api-int.&amp;lt;cluster_name&amp;gt;.&amp;lt;base_domain&amp;gt;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ingress route&lt;/td>
&lt;td>*.apps.&amp;lt;cluster_name&amp;gt;.&amp;lt;base_domain&amp;gt;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>參考 How to try out single-node OpenShift from Red Hat 安裝指南：
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/QFf0yVAHQKc"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h2 id="2-登入安裝-consoleredhatcomhttpsconsoleredhatcom-創建-openshift-單節點部署">2. 登入安裝 &lt;a class="link" href="https://console.redhat.com/" target="_blank" rel="noopener"
>console.redhat.com&lt;/a>, 創建 OpenShift 單節點部署&lt;/h2>
&lt;h3 id="installation---assisted-install">Installation - Assisted Install&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>開啟 &lt;a class="link" href="https://console.redhat.com" target="_blank" rel="noopener"
>https://console.redhat.com&lt;/a>，選擇 OpenShift&lt;/strong>
&lt;img src="https://i.imgur.com/Qzz1mj4.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>點擊上方 Create Cluster&lt;/strong>
&lt;img src="https://i.imgur.com/mNKB6GQ.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>選擇 Datacenter 並點擊 Create Cluster&lt;/strong>
&lt;img src="https://i.imgur.com/tGSYnXs.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>輸入 Cluster 相關參數，勾選 Install single node OpenShift&lt;/strong>
&lt;img src="https://i.imgur.com/oPwZ5kx.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Host network 部分選擇 Static network configuration&lt;/strong>
&lt;img src="https://i.imgur.com/wV0rcAv.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>輸入相關網路參數&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>此部分範例設置為 192.168.10.0/24 網段&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://i.imgur.com/SgPDkJ5.png"
loading="lazy"
>
&lt;img src="https://i.imgur.com/X9XE6Ev.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>點選 Add host&lt;/strong>
&lt;img src="https://i.imgur.com/vhYpStz.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>選擇 Minimal image file，並輸入對應 ssh public key 內容&lt;/strong>
&lt;img src="https://i.imgur.com/zJwFOr9.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>下載 Discovery ISO&lt;/strong>
&lt;img src="https://i.imgur.com/1N1LkT7.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>啟動 VM 並掛載該 ISO，等待其自動安裝與設定，完成後應該看到 Host Inventory 顯示如下&lt;/strong>
&lt;img src="https://i.imgur.com/QngzQ70.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>針對錯誤部分進行修改，此處問題為 hostname 不能為 localhost&lt;/strong>
&lt;img src="https://i.imgur.com/vEYp79z.png"
loading="lazy"
>
&lt;img src="https://i.imgur.com/TI0hOOP.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>確認沒問題後即可進行下一步&lt;/strong>
&lt;img src="https://i.imgur.com/yzBx0w6.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>最後檢查一遍設定，確認無誤後點擊 Install cluster&lt;/strong>
&lt;img src="https://i.imgur.com/sxKA3O1.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>等待安裝完畢&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>單節點安裝時間大約 40 分鐘&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://i.imgur.com/rE8Ykdw.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;img src="https://i.imgur.com/5hl2Gqc.png"
loading="lazy"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>安裝完成後即可根據以下連線資訊使用 Single Node OCP&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/Bvn1ERs.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>最終登入 OCP 查看狀態&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/tZG1QkE.png"
loading="lazy"
>
&lt;img src="https://i.imgur.com/BidpalP.jpg"
loading="lazy"
>&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ol>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=QFf0yVAHQKc&amp;amp;ab_channel=OpenShift" target="_blank" rel="noopener"
>Demo: How to try out single-node OpenShift from Red Hat&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.10/installing/installing_sno/install-sno-preparing-to-install-sno.html" target="_blank" rel="noopener"
>Preparing to install on a single node&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.10/installing/installing_sno/install-sno-installing-sno.html" target="_blank" rel="noopener"
>OpenShift 4.10 - Installing OpenShift on a single node&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=PE8W8OKJoXc&amp;amp;ab_channel=OpenShift" target="_blank" rel="noopener"
>OpenShift Virtualization on a Single Node Cluster&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.redhat.com/en/blog/meet-single-node-openshift-our-smallest-openshift-footprint-edge-architectures" target="_blank" rel="noopener"
>Meet single node OpenShift: Our newest small OpenShift footprint for edge architectures&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/lees07/tech-docs/blob/master/e1-sno-by-assisted-installer.md" target="_blank" rel="noopener"
>https://github.com/lees07/tech-docs/blob/master/e1-sno-by-assisted-installer.md&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=leJa9HmvdI0&amp;amp;ab_channel=RyanNix" target="_blank" rel="noopener"
>https://www.youtube.com/watch?v=leJa9HmvdI0&amp;ab_channel=RyanNix&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Disconnected Environment - Introducing Mirror Registry for Red Hat OpenShift</title><link>https://blog.yylin.io/openshift/mirror-registry-for-ocp4-install/</link><pubDate>Mon, 07 Mar 2022 00:53:25 +0800</pubDate><guid>https://blog.yylin.io/openshift/mirror-registry-for-ocp4-install/</guid><description>&lt;p>本文件如何安裝 OpenShift 4.8 版本至虛擬機器上，這邊將以 RHEL 環境來進行測試。&lt;/p>
&lt;ul>
&lt;li>RHEL 8 or Fedora machine with podman v3.3 installed&lt;/li>
&lt;li>Fully qualified domain name for the Quay service (must resolve via DNS, or at least /etc/hosts)&lt;/li>
&lt;li>Passwordless sudo access on the target host (rootless install tbd)&lt;/li>
&lt;li>Key-based SSH connectivity on the target host (will be set up automatically for local installs, in case of remote hosts see here)&lt;/li>
&lt;li>make (only if compiling your own installer)&lt;/li>
&lt;/ul>
&lt;p>當我們的基礎設施處於離線環境時，需要創建容器鏡像倉庫(Registry)來託管安裝 OpenShift Container Platform 所需的相關鏡像檔，來正常部署 OpenShift 叢集。&lt;/p>
&lt;p>這是有關 mirror registry for Red Hat OpenShift OpenShift 4 的官方流程圖（可在 Red Hat Blog 頁面中找到）：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/49Qc3LU.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="情境與使用目標">情境與使用目標&lt;/h2>
&lt;p>OpenShift 通常是在受控制離線網路的情況下運行 Production Cluster。而客戶要使用 Red Hat Quay 在 OpenShift 上運行優勢包含，有更多擴充性與部署元件配置整合性。要在離線環境安裝 OpenShift 前提條件，需要一個存放的安裝所需的相關鏡像的鏡像倉庫 (e.g., Quay, Harbor, Docker registry)，這邊就會有雞生蛋蛋生雞問題。&lt;/p>
&lt;p>解決方案/目標：&lt;/p>
&lt;p>Red Hat 提供一個 “mirror registry”工具，只針對 OpenShift 部署的引導(Bootstrap)鏡像倉庫，透過自動化腳本安裝程序，提供在 RHEL 8 (or Fedora) 的系統環境，快速部署一個精簡版的 Quay ，提供保存下載特定版本 OpenShift、OpenShiftHub 鏡像檔。mirror registry 提供針對離線環境或只是單純 PoC OpenShift 情境使用的 Registry，可以透過自動化腳本，快速部署設置安裝單節點(all-in-one)的 Quay ，所需要的相關手動繁瑣設定，例如：完整網域名稱 FQDN、使用者自定義 SSL/TLS 憑證、訪問權權限 SSH key 及運行的環境選擇。&lt;/p>
&lt;p>情境: 離線環境，安裝 OpenShift 運行流程:&lt;/p>
&lt;ol>
&lt;li>在可連線外部網路環境中，透過 mirror registry 部署第一座容器鏡像倉庫(Online Mirror) 進行 OpenShift、OpenShiftHub 必要鏡像檔存放。&lt;/li>
&lt;li>同樣在離線環境中，透過 mirror registry 部署第二座容器鏡像倉庫(Air-gapped Mirror)，從 Online Mirror 拷貝並要的映像檔存放於 Air-gapped Mirror&lt;/li>
&lt;li>透過 Air-gapped Mirror 部署 OpenShift Production/Infra Cluster&lt;/li>
&lt;li>OpenShift 安裝 Quay Operator 提供內部服務及應用所需的鏡像存放&lt;/li>
&lt;/ol>
&lt;h2 id="事前準備">事前準備&lt;/h2>
&lt;ul>
&lt;li>從 &lt;a class="link" href="https://console.redhat.com/openshift/downloads#tool-mirror-registry" target="_blank" rel="noopener"
>OpenShift console Downloads&lt;/a> 下載最新版本的 &lt;code>mirror-registry.tar.gz&lt;/code>&lt;/li>
&lt;li>準備 pull-secret.json 檔案&lt;/li>
&lt;/ul>
&lt;h2 id="安裝">安裝&lt;/h2>
&lt;ul>
&lt;li>在當前環境安裝 mirror registry&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ vim /etc/hosts
127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
::1 localhost localhost.localdomain localhost6 localhost6.localdomain6
127.0.0.1 registry.yylin.demolab
$ export HOSTNAME=&amp;#34;registry.yylin.demolab&amp;#34;
$ ./mirror-registry install --quayHostname ${HOSTNAME} --ssh-key &amp;lt;~/.ssh/my_id_rsa&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>最後輸出顯示 registry host 與登入資訊&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">INFO[2022-03-01 00:52:38] Quay installed successfully, permanent data are stored in /etc/quay-install
INFO[2022-03-01 00:52:38] Quay is available at https://registry.yylin.demolab:8443 with credentials (init, xxxxxxxxxxxxxxxxxxxxxx)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>產生 Registry Basic Auth 之認證資訊&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback"># (init, xxxxxxxxxxxxxxxxxxxxxx)
echo -n &amp;#39;&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;&amp;#39; | base64 -w0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>在 pull-secret 加入本地 Registry 認證資訊&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback"> &amp;#34;registry.yylin.demolab:8443&amp;#34;: {
&amp;#34;auth&amp;#34;: &amp;#34;aW5pdDo3TzlNV1hBMDhQcTJKZGh0M0M2elZJNU5EMWlsYkJ3NA==&amp;#34;
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>驗證登入registry&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ podman login -u init --authfile pull-secret.json registry.yylin.demolab:8443
Error: authenticating creds for &amp;#34;registry.yylin.demolab:8443&amp;#34;: pinging container registry registry.yylin.demolab:8443: Get &amp;#34;https://registry.yylin.demolab:8443/v2/&amp;#34;: x509: certificate signed by unknown authority (possibly because of &amp;#34;crypto/rsa: verification error&amp;#34; while trying to verify candidate authority certificate &amp;#34;bastion.redhat.kubedev.org&amp;#34;)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>安裝更新 quay 憑證&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>mirror registry 預設會配置好 CA 憑證，請將 PEM 文件格式添加憑證到系統中信任的 CA 列表中，這邊複製到 /usr/share/pki/ca-trust-source/anchors/ 目錄中&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ cp /etc/quay-install/quay-rootCA/rootCA.pem /usr/share/pki/ca-trust-source/anchors/rootCA.cert
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>更新系統範圍的信任儲存配置，請使用 update-ca-trust 命令：&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ update-ca-trust
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>再次登入mirror registry - Quay 確認憑證狀態是不是已經更新&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ podman login -u init --authfile pull-secret.json bastion.redhat.kubedev.org:8443
Password:
Login Succeeded!
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="開始備份-openshift-images">開始備份 OpenShift images&lt;/h2>
&lt;ol>
&lt;li>建立備份路徑&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ mkdir -p $HOME/openshift4/registry/images
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>匯入環境變數&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback"># vim upgrade-env
export OCP_RELEASE=$(oc version -o json --client | jq -r &amp;#39;.releaseClientVersion&amp;#39;)
export LOCAL_REGISTRY=&amp;#34;registry.yylin.demolab:8443&amp;#34;
export LOCAL_REPOSITORY=&amp;#34;ocp4/openshift4&amp;#34;
export PRODUCT_REPO=&amp;#34;openshift-release-dev&amp;#34;
# /註記/ 請確認 pull-secret.json 裡面有包含 mirror rigistry 資訊
export LOCAL_SECRET_JSON=$HOME/mirror-registry/pull-secret.json
export RELEASE_NAME=&amp;#34;ocp-release&amp;#34;
export ARCHITECTURE=x86_64
# 指定 images 存放路徑
export REMOVABLE_MEDIA_PATH=&amp;#34;$HOME/openshift4/registry/images&amp;#34;
# 匯入環境變數
source upgrade-env
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>備份 Image&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>/#1/ Review the images and configuration manifests to mirror:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc adm release mirror -a ${LOCAL_SECRET_JSON} --from=quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE}-${ARCHITECTURE} --to=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY} --to-release-image=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY}:${OCP_RELEASE}-${ARCHITECTURE} --dry-run
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">imageContentSources:
- mirrors:
- registry.yylin.demolab:8443/ocp4/openshift4
source: quay.io/openshift-release-dev/ocp-release
- mirrors:
- registry.yylin.demolab:8443/ocp4/openshift4
source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>/#2/ Mirror the images to a directory on the removable media:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc adm release mirror -a ${LOCAL_SECRET_JSON} --to-dir=${REMOVABLE_MEDIA_PATH}/mirror quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE}-${ARCHITECTURE}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">info: Mirroring completed in 3m6.3s (66.22MB/s)
Success
Update image: openshift/release:4.10.0-rc.3-x86_64
To upload local images to a registry, run:
oc image mirror --from-dir=/root/openshift4/registry/images/mirror &amp;#39;file://openshift/release:4.10.0-rc.3-x86_64*&amp;#39; REGISTRY/REPOSITORY
Configmap signature file /root/openshift4/registry/images/mirror/config/signature-sha256-3d4ada825f4aa4d2.yaml created
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>/#3/ Take the media to the restricted network environment and upload the images to the local container registry:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc image mirror -a ${LOCAL_SECRET_JSON} --from-dir=${REMOVABLE_MEDIA_PATH}/mirror &amp;#34;file://openshift/release:${OCP_RELEASE}*&amp;#34; ${LOCAL_REGISTRY}/${LOCAL_REPOSITORY}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">phase 0:
registry.redhat.demolab:8443 ocp4/openshift4 blobs=334 mounts=0 manifests=163 shared=0
info: Planning completed in 2.12s
uploading: registry.redhat.demolab:8443/ocp4/openshift4 sha256:7253c5d7bf339222334565e0ec7ac88dd017dc9b9ec01654d26e8dda07408548 81.38MiB
uploading: registry.redhat.demolab:8443/ocp4/openshift4 sha256:8e549eaeb17902a2a516d03776112ad7a9bfd10cd2d1c298fe31b1c15d3b4166 154.4MiB
uploading: registry.redhat.demolab:8443/ocp4/openshift4 sha256:11456a2e94a652afe44f2645d83a051160119fd953b2459167cc88232adbf9ed 31.45MiB
uploading: registry.redhat.demolab:8443/ocp4/openshift4 sha256:4ceffbad995c4d6e76142c6b46e7f2e06fcd2ddb6eb2c3624cc0244ae018356f 106.9MiB
...
...
sha256:2d80cc5beffc10607a53eb6c013e87d03e267cdf0b8fc678b40acf5432957714 registry.redhat.demolab:8443/ocp4/openshift4:4.10.0-rc.3-x86_64-multus-networkpolicy
sha256:df3b0ec40395ea460fbf2728ca7adff79dbaebddcffce003e88b3fb9cb2c9759 registry.redhat.demolab:8443/ocp4/openshift4:4.10.0-rc.3-x86_64-must-gather
sha256:a340ea3d86560de8cf9ee2c1afe42ad24e5eefc9903a0073abe9dc54815bf710 registry.redhat.demolab:8443/ocp4/openshift4:4.10.0-rc.3-x86_64-console-operator
sha256:f532e7f50cadfc757a6d277ab5476a31a4f24aac0afc615da6ff9f7ce5e2b538 registry.redhat.demolab:8443/ocp4/openshift4:4.10.0-rc.3-x86_64-cluster-image-registry-operator
info: Mirroring completed in 1m17.77s (5.572MB/s)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>/#4/ Directly push the release images to the local registry by using following command:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc adm release mirror -a ${LOCAL_SECRET_JSON} --from=quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE}-${ARCHITECTURE} --to=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY} --apply-release-image-signature
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.10/openshift_images/samples-operator-alt-registry.html" target="_blank" rel="noopener"
>更多配置請參考 Mirroring the OpenShift Container Platform image repository&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="mirror-後結果">mirror 後結果&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/APzRuyc.png"
loading="lazy"
>&lt;/p>
&lt;hr>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.10/installing/disconnected_install/installing-mirroring-creating-registry.html#mirror-registry-localhost_installing-mirroring-creating-registry" target="_blank" rel="noopener"
>Mirroring on a local host with mirror registry for Red Hat OpenShift&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cloud.redhat.com/blog/introducing-mirror-registry-for-red-hat-openshift" target="_blank" rel="noopener"
>https://cloud.redhat.com/blog/introducing-mirror-registry-for-red-hat-openshift&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://access.redhat.com/support/policy/updates/openshift#omr" target="_blank" rel="noopener"
>https://access.redhat.com/support/policy/updates/openshift#omr&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=j5e4OT71N0A" target="_blank" rel="noopener"
>https://www.youtube.com/watch?v=j5e4OT71N0A&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>NVIDIA GPU Operator on OpenShift4</title><link>https://blog.yylin.io/openshift/gpu-operator/</link><pubDate>Mon, 28 Feb 2022 21:40:40 +0800</pubDate><guid>https://blog.yylin.io/openshift/gpu-operator/</guid><description>&lt;p>Nvidia GPU Operator v1.9 on OpenShift 4.9.9 包含以上版本，安裝不用再進行額外權限配置]&lt;/p>
&lt;h2 id="openshift-499-或更高的版本-1">OpenShift 4.9.9 或更高的版本 [1]&lt;/h2>
&lt;p>針對 driver toolkit 取消必要安裝要求:&lt;/p>
&lt;ul>
&lt;li>Set up an entitlement&lt;/li>
&lt;li>Mirror the RPM packages in a disconnected environment&lt;/li>
&lt;li>Configure a proxy to access the package repository&lt;/li>
&lt;/ul>
&lt;p>[1] &lt;a class="link" href="https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/steps-overview.html#entitlement-free-supported-versions" target="_blank" rel="noopener"
>https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/steps-overview.html#entitlement-free-supported-versions&lt;/a>&lt;/p>
&lt;h2 id="openshift-498-與以下版本-2">OpenShift 4.9.8 與以下版本 [2]&lt;/h2>
&lt;p>需手動操作獲取 OCP 憑證，創建 MachineConfig 來認證 OCP 叢集，擴大授權 Images 使用權限範圍，來安裝 Nvidia Operator :&lt;/p>
&lt;ol>
&lt;li>從 Red Hat Customer Portal 下載 Red Hat OpenShift Container Platform 訂閱憑證 (啟用權限需要登入 OCP 憑證）。&lt;/li>
&lt;li>創建一個 MachineConfig 啟用訂閱管理平台並提供有效訂閱憑證。等待 MachineConfigOperator 重啟節點並完成 MachineConfig。&lt;/li>
&lt;li>驗證叢集所有節點更新權限是否正常。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>補充 - NVIDIA GPU Operator 安裝會部署幾個 Pod 服務，用於管理和啟用 GPU 在 OpenShift 中運作。其中一些 Pod 需要 OpenShift 使用一些非 Universal Base Image (UBI) 默認授權的 Images。必須在 OpenShift Cluster 中啟用信任的授權 Images，來啟動 NVIDIA GPU 驅動程式的容器運行。&lt;/p>
&lt;/blockquote>
&lt;p>[1] &lt;a class="link" href="https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/steps-overview.html#entitlement-free-supported-versions" target="_blank" rel="noopener"
>https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/steps-overview.html#entitlement-free-supported-versions&lt;/a>
[2] &lt;a class="link" href="https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/cluster-entitlement.html#enabling-a-cluster-wide-entitlemenent" target="_blank" rel="noopener"
>https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/cluster-entitlement.html#enabling-a-cluster-wide-entitlemenent&lt;/a>&lt;/p>
&lt;h2 id="install-operator---node-feature-discovery">Install Operator - Node Feature Discovery&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/3J8zoZU.png"
loading="lazy"
>
&lt;img src="https://i.imgur.com/NDepxYJ.png"
loading="lazy"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">[lab-user@bastion ~]$ oc get no
NAME STATUS ROLES AGE VERSION
ip-10-0-135-51.us-east-2.compute.internal Ready worker 3h5m v1.22.3+e790d7f
ip-10-0-142-219.us-east-2.compute.internal Ready master 3h14m v1.22.3+e790d7f
ip-10-0-167-35.us-east-2.compute.internal Ready worker 3h5m v1.22.3+e790d7f
ip-10-0-186-251.us-east-2.compute.internal Ready master 3h14m v1.22.3+e790d7f
ip-10-0-213-103.us-east-2.compute.internal Ready master 3h14m v1.22.3+e790d7f
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/456JizI.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>要驗證實例是否已創建，請運行：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">[lab-user@bastion ~]$ oc get pods -n openshift-nfd
NAME READY STATUS RESTARTS AGE
nfd-controller-manager-6f65f47cf6-tg6gj 2/2 Running 0 24m
nfd-master-d7cqw 1/1 Running 0 35s
nfd-master-j42m9 1/1 Running 0 35s
nfd-master-r64nv 1/1 Running 0 35s
nfd-worker-24tzn 1/1 Running 0 35s
nfd-worker-5rsg2 1/1 Running 0 35s
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>成功的部署會顯示一個Running狀態。&lt;/li>
&lt;/ul>
&lt;h2 id="installing-the-nvidia-gpu-operator">Installing the NVIDIA GPU Operator&lt;/h2>
&lt;p>With the Node Feature Discovery Operator installed you can continue with the final step and install the NVIDIA GPU Operator.&lt;/p>
&lt;p>As a cluster administrator, you can install the NVIDIA GPU Operator using the OpenShift Container Platform CLI or the web console.&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zSZnOQc.png"
loading="lazy"
>
&lt;img src="https://i.imgur.com/H5mLoWH.png"
loading="lazy"
>
&lt;img src="https://i.imgur.com/gV3G6kq.png"
loading="lazy"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">kind: ClusterPolicy
apiVersion: nvidia.com/v1
metadata:
name: gpu-cluster-policy
spec:
dcgmExporter:
config:
name: &amp;#39;&amp;#39;
dcgm:
enabled: true
daemonsets: {}
devicePlugin: {}
driver:
enabled: true
use_ocp_driver_toolkit: true
repoConfig:
configMapName: &amp;#39;&amp;#39;
certConfig:
name: &amp;#39;&amp;#39;
licensingConfig:
nlsEnabled: false
configMapName: &amp;#39;&amp;#39;
virtualTopology:
config: &amp;#39;&amp;#39;
gfd: {}
migManager:
enabled: true
nodeStatusExporter:
enabled: true
operator:
defaultRuntime: crio
deployGFD: true
initContainer: {}
mig:
strategy: single
toolkit:
enabled: true
validator:
plugin:
env:
- name: WITH_WORKLOAD
value: &amp;#39;true&amp;#39;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Create the ClusterPolicy custom resource. This CRD will create several OCP resources. It will evaluate all the labels for the each node in the cluster and look for this:&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/k4xdsx8.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/45ygkxL.png"
loading="lazy"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc project nvidia-gpu-operator
$ oc get pod -o wide
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="validating-the-gpu-availability">Validating the GPU availability&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">[lab-user@bastion ~]$ oc get pod | grep nvidia-device-plugin-daemonset
nvidia-device-plugin-daemonset-bspfh 1/1 Running 0 21m
nvidia-device-plugin-daemonset-n62dm 1/1 Running 0 21m
[lab-user@bastion ~]$ oc exec -ti nvidia-device-plugin-daemonset-bspfh -- nvidia-smi
Defaulted container &amp;#34;nvidia-device-plugin-ctr&amp;#34; out of: nvidia-device-plugin-ctr, toolkit-validation (init)
Fri Jan 28 06:47:21 2022
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.82.01 Driver Version: 470.82.01 CUDA Version: 11.4 |
|-------------------------------+----------------------+----------------------+
| GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC |
| Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. |
| | | MIG M. |
|===============================+======================+======================|
| 0 Tesla V100-SXM2... On | 00000000:00:1E.0 Off | 0 |
| N/A 32C P0 23W / 300W | 0MiB / 16160MiB | 0% Default |
| | | N/A |
+-------------------------------+----------------------+----------------------+
+-----------------------------------------------------------------------------+
| Processes: |
| GPU GI CI PID Type Process name GPU Memory |
| ID ID Usage |
|=============================================================================|
| No running processes found |
+-----------------------------------------------------------------------------+
...
...
$ oc exec -ti nvidia-device-plugin-daemonset-n62dm -- nvidia-smi
Defaulted container &amp;#34;nvidia-device-plugin-ctr&amp;#34; out of: nvidia-device-plugin-ctr, toolkit-validation (init)
Fri Jan 28 06:47:44 2022
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.82.01 Driver Version: 470.82.01 CUDA Version: 11.4 |
|-------------------------------+----------------------+----------------------+
| GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC |
| Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. |
| | | MIG M. |
|===============================+======================+======================|
| 0 Tesla V100-SXM2... On | 00000000:00:1E.0 Off | 0 |
| N/A 26C P0 24W / 300W | 0MiB / 16160MiB | 0% Default |
| | | N/A |
+-------------------------------+----------------------+----------------------+
+-----------------------------------------------------------------------------+
| Processes: |
| GPU GI CI PID Type Process name GPU Memory |
| ID ID Usage |
|=============================================================================|
| No running processes found |
+-----------------------------------------------------------------------------+
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="running-a-sample-gpu-application">Running a sample GPU Application&lt;/h2>
&lt;p>Run a simple CUDA VectorAdd sample, which adds two vectors together to ensure the GPUs have bootstrapped correctly.&lt;/p>
&lt;ol>
&lt;li>Run the following:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">cat &amp;lt;&amp;lt; EOF | oc create -f -
apiVersion: v1
kind: Pod
metadata:
name: cuda-vectoradd
spec:
restartPolicy: OnFailure
containers:
- name: cuda-vectoradd
image: &amp;#34;nvidia/samples:vectoradd-cuda11.2.1&amp;#34;
resources:
limits:
nvidia.com/gpu: 1
EOF
pod/cuda-vectoradd created
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>Check the logs of the container:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">[lab-user@bastion ~]$ oc logs cuda-vectoradd
[Vector addition of 50000 elements]
Copy input data from the host memory to the CUDA device
CUDA kernel launch with 196 blocks of 256 threads
Copy output data from the CUDA device to the host memory
Test PASSED
Done
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="getting-information-about-the-gpu">Getting information about the GPU¶&lt;/h2>
&lt;p>The nvidia-smi shows memory usage, GPU utilization and the temperature of the GPU. Test the GPU access by running the popular nvidia-smi command within the pod.&lt;/p>
&lt;p>To view GPU utilization, run nvidia-smi from a pod in the GPU Operator daemonset.&lt;/p>
&lt;ol>
&lt;li>Change to the nvidia-gpu-operator project:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc project nvidia-gpu-operator
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>Run the following command to view these new pods:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc get pod -owide -lopenshift.driver-toolkit=true
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES
nvidia-driver-daemonset-49.84.202201102104-0-gl557 2/2 Running 0 26m 10.131.0.106 ip-10-0-167-35.us-east-2.compute.internal &amp;lt;none&amp;gt; &amp;lt;none&amp;gt;
nvidia-driver-daemonset-49.84.202201102104-0-k9sg5 2/2 Running 0 26m 10.128.2.17 ip-10-0-135-51.us-east-2.compute.internal &amp;lt;none&amp;gt; &amp;lt;none&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>Run the nvidia-smi command within the pod:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc exec -it nvidia-driver-daemonset-48.84.202110270303-0-9df9j -- nvidia-smi
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>OpenShift Intsall Troubleshooting Notes</title><link>https://blog.yylin.io/openshift/install-troubleshooting/</link><pubDate>Wed, 29 Sep 2021 00:53:25 +0800</pubDate><guid>https://blog.yylin.io/openshift/install-troubleshooting/</guid><description>&lt;p>延伸上一篇 OCP UPI 部署(&lt;a class="link" href="https://blog.yylin.io/p/openshift-4.8.x-upi-install-on-bare-metal" target="_blank" rel="noopener"
>OpenShift 4.8.x UPI install on Bare metal&lt;/a>)過程遇到問題彙整。&lt;/p>
&lt;blockquote>
&lt;p>備註: 由於資源有限情況下，透過單一伺服器(主機)透過 VM 模擬實際節點硬體資源環境，這邊主要透過檢測與除錯，來確保 OpenShift 部署成功。&lt;/p>
&lt;/blockquote>
&lt;h2 id="部署常見問題整理-持續更新">部署常見問題整理 (持續更新)&lt;/h2>
&lt;h3 id="超時等待-bootstrap-節點啟動">超時等待 &lt;code>bootstrap&lt;/code> 節點啟動&lt;/h3>
&lt;ul>
&lt;li>發現特定 Pod 持續&lt;code>RunningNotReady&lt;/code> 狀態&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">W0830 11:16:37.087497 35214 reflector.go:436] k8s.io/client-go/tools/watch/informerwatcher.go:146: watch of *v1.ConfigMap ended with: very short watch: k8s.io/client-go/tools/watch/informerwatcher.go:146: Unexpected watch close - watch lasted less than a second and no items received
apiserver - &amp;gt; RunningNotReady
Aug 30 03:42:37 bootstrap.lab.yiylin.internal bootkube.sh[644199]: Pod Status:openshift-kube-apiserver/kube-apiserver RunningNotReady
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>此情境請透過收集&lt;code>bootstrap&lt;/code> 節點日誌，來確認環境問題&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./openshift-install gather bootstrap --dir&lt;span class="o">=&lt;/span>&amp;lt;installation_directory&amp;gt;
...
INFO Pulling debug logs from the bootstrap machine
INFO Bootstrap gather logs captured here &lt;span class="s2">&amp;#34;&amp;lt;installation_directory&amp;gt;/log-bundle-&amp;lt;timestamp&amp;gt;.tar.gz&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>蒐集包含 bootstrap process / bootstrap 上所有 Pod/Container 的 log&lt;/li>
&lt;li>下載完後解壓縮 &lt;code>.tar.gz&lt;/code> 檔案，針對可能部署或未啟動的&lt;code>Pod&lt;/code>檢查log錯誤狀態，來找到對應的錯誤資訊&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>補充說明 bootstrap 主要分成兩個動作&lt;/p>
&lt;ol>
&lt;li>安裝自己跟建立自己的 cluster(Pod)&lt;/li>
&lt;li>引導安裝 master x 3&lt;/li>
&lt;li>master bootstrap 全部安裝完，然後下 wait for complete 確認最終才可移除 bootstrap node&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h4 id="reference">Reference:&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing-troubleshooting.html#installation-bootstrap-gather_installing-troubleshooting" target="_blank" rel="noopener"
>Gathering logs from a failed installation&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing_bare_metal/installing-bare-metal.html#installation-installing-bare-metal_installing-bare-metal" target="_blank" rel="noopener"
>Waiting for the bootstrap process to complete&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="master-node-部署不起來檢查並驗證-etcd-運行之硬碟是否正常運作-">Master Node 部署不起來，檢查並驗證 etcd 運行之硬碟是否正常運作 ?&lt;/h3>
&lt;ul>
&lt;li>大部分 master 無法建置情境，通常可能會有原因是硬碟速度問題(硬碟壞軌)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>造成叢集有時候部署成功有時候會失敗的情況&lt;/p>
&lt;/blockquote>
&lt;p>透過簡單運行 &lt;code>fio&lt;/code> 來測試 etcd benchamrk performance 檢測&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ oc debug node/&amp;lt;master_node&amp;gt;
&lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>
sh-4.4# chroot /host bash
&lt;span class="o">[&lt;/span>root@&amp;lt;master_node&amp;gt; /&lt;span class="o">]&lt;/span>&lt;span class="c1"># podman run --volume /var/lib/etcd:/var/lib/etcd:Z quay.io/openshift-scale/etcd-perf&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="reference-1">Reference:&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://access.redhat.com/solutions/4885641" target="_blank" rel="noopener"
>How to Use &amp;lsquo;fio&amp;rsquo; to Check Etcd Disk Performance in OCP
&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=6qjsh9J3ndM&amp;amp;ab_channel=PingChunHuang" target="_blank" rel="noopener"
>[參考影片說明] OpenShift 4 如何使用 fio 驗證 etcd 運行之硬碟是否可以正常運作 / Use &amp;lsquo;fio&amp;rsquo; to Check Etcd Disk Performance&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.ibm.com/docs/en/cloud-private/3.2.x?topic=requirements-hardware-recommendations" target="_blank" rel="noopener"
>Hardware requirements and recommendations&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="補充檢查---除錯流程">補充|檢查 - 除錯流程&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>部署過程都透過 bootkube 確認部署狀態資訊，log 會不斷顯示錯誤然後 loop 確認環節，嘗試能不能從他錯誤訊息找出規則(也就是他跳錯誤的地方，通常是在 log restart之前)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>嘗試 SSH 到 Master Node，透過 &lt;code>netstat -plnt&lt;/code> 檢查三個服務，這三個通常只要好，這台 Master 就沒問題 (6443| 22623|2379|2380)，分別是 OpenShift API/Kubernetes API/ETCD/Machine Config Operator&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果以上幾個 Pod 有問題，透過 &lt;code>crictl ps&lt;/code> 跟 &lt;code>crictl log&lt;/code> 去查看 Container Log，問題有可能是連續的錯誤，所以可能是 API 有問題，可能是 Controller/Scheduler 引起，細節需要透過上面提到方式，下載節點所有 Log 日誌來比對檢查，找到正確的錯誤資訊來排除錯誤&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="reference-2">Reference:&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://connect.redhat.com/en/blog/openshift-troubleshooting-resources" target="_blank" rel="noopener"
>OpenShift Troubleshooting Resources&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>OpenShift 4.8.x UPI install on Bare metal</title><link>https://blog.yylin.io/openshift/ocp4-install/</link><pubDate>Sun, 26 Sep 2021 14:54:40 +0800</pubDate><guid>https://blog.yylin.io/openshift/ocp4-install/</guid><description>&lt;blockquote>
&lt;p>[註記] 由於硬體環境資源有限，本實驗是透過 &lt;a class="link" href="https://pve.proxmox.com/wiki/Main_Page" target="_blank" rel="noopener"
>&lt;code>Proxmox Environment&lt;/code>&lt;/a> 單一伺服器節點來模擬部署 &lt;code>OpenShift&lt;/code> 叢集，並依據官網配置建議硬體需求(Server sizing)資源。
[共同撰寫編輯]: &lt;a class="link" href="https://k2r2bai.com/" target="_blank" rel="noopener"
>Kyle Bai&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="部署版本說明">部署版本說明：&lt;/h2>
&lt;ul>
&lt;li>Proxmox Environment v6.1-7
&lt;ul>
&lt;li>CPU: 8-Core, 16-Thread Unlocked / Memory: 128 GB&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>OpenShift v4.8.x.&lt;/li>
&lt;/ul>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>參考官網文件 - &lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing_bare_metal/installing-bare-metal.html" target="_blank" rel="noopener"
>Installing a user-provisioned cluster on bare metal&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="事前準備">事前準備&lt;/h2>
&lt;p>開始前，需要先準備以下資訊與要求。&lt;/p>
&lt;h3 id="download-urls">Download URLs&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://console.redhat.com/openshift/install/metal/user-provisioned" target="_blank" rel="noopener"
>User-provisioned infrastructure&lt;/a>: 可下載 OpenShift Installer、CLI 與 Pull secrets(需要登入 Red Hat 註冊帳號權限)&lt;/li>
&lt;li>&lt;a class="link" href="https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-4.8/" target="_blank" rel="noopener"
>Public OpenShift 4.8 Mirror&lt;/a>: 可下載 OpenShift Installer、CLI 與 OPM。
&lt;ul>
&lt;li>&lt;strong>openshift-client-linux.tar.gz&lt;/strong>: 包含 oc 與 kubectl CLI 工具。&lt;/li>
&lt;li>&lt;strong>openshift-install-linux.tar.gz&lt;/strong>: 包含 openshift-install 工具。用於建立 OpenShift auth、igntion 等設定檔案。&lt;/li>
&lt;li>&lt;strong>opm-linux.tar.gz&lt;/strong>: 用於管理 Operator Hub 與 mirror 相關 images。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.8/latest/" target="_blank" rel="noopener"
>Public RHCOS 4.8 Mirror&lt;/a>: 可下載 RHCOS 4.8 相關 VM images。
&lt;ul>
&lt;li>若手動安裝以下載 &lt;code>rhcos-live.x86_64.iso&lt;/code> 為主。若想要控管使用版本，請選擇有標示版本的 live iso。
&lt;ul>
&lt;li>FET vSphere 安裝請以這方式進行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>若以 PXE 方式安裝，則下載以下映像檔:
&lt;ul>
&lt;li>rhcos-live-initramfs.x86_64.img&lt;/li>
&lt;li>rhcos-live-kernel-x86_64&lt;/li>
&lt;li>rhcos-live-rootfs.x86_64.img&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>過程中會透過 &lt;code>wget&lt;/code> 下載，因此在有網路狀況下，不需要預先下載。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="network-and-hosts-info">Network and Hosts Info&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>OpenShift subnet CIDR&lt;/strong>: 192.168.101.0/24&lt;/li>
&lt;li>&lt;strong>OpenShift Pod Network(CNI)&lt;/strong>: 10.128.0.0/14&lt;/li>
&lt;li>&lt;strong>OpenShift Service Network&lt;/strong>: 172.3.0.0/16&lt;/li>
&lt;li>&lt;strong>Domain&lt;/strong>: lab.yiylin.internal&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Hosts&lt;/th>
&lt;th>IP&lt;/th>
&lt;th>CPU&lt;/th>
&lt;th>RAM&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>bashtion&lt;/td>
&lt;td>192.168.101.9&lt;/td>
&lt;td>2 vCore&lt;/td>
&lt;td>4G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bootstrap&lt;/td>
&lt;td>192.168.101.10&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>master-1&lt;/td>
&lt;td>192.168.101.21&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>master-2&lt;/td>
&lt;td>192.168.191.22&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>master-3&lt;/td>
&lt;td>192.168.191.23&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>worker-1&lt;/td>
&lt;td>192.168.191.31&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>worker-2&lt;/td>
&lt;td>192.168.191.32&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>infra-1&lt;/td>
&lt;td>192.168.191.41&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>infra-2&lt;/td>
&lt;td>192.168.191.42&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>infra-3&lt;/td>
&lt;td>192.168.191.43&lt;/td>
&lt;td>4 vCore&lt;/td>
&lt;td>8G&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>這裡為了方便測試，將 PXE / HAProxy / DNS Server 等都放在 bastion上。
[額外參考資訊]各元件節點最小資源可參考 &lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing_platform_agnostic/installing-platform-agnostic.html#minimum-resource-requirements_installing-platform-agnostic" target="_blank" rel="noopener"
>Minimum resource requirements&lt;/a>。
請先透過 &lt;code>Proxmox Environment&lt;/code> 開啟對應 &lt;code>hardware&lt;/code> VM。&lt;/p>
&lt;/blockquote>
&lt;h4 id="補充-network-說明">補充 Network 說明&lt;/h4>
&lt;blockquote>
&lt;p>其中 &lt;code>OpenShift subnet CIDR&lt;/code> 請修改為自己當前 Proxmox Environment 網路配置)
&lt;img src="https://i.imgur.com/8UnOcXL.jpg"
loading="lazy"
>&lt;/p>
&lt;/blockquote>
&lt;h2 id="bastion">Bastion&lt;/h2>
&lt;p>透過 Live CD 安裝 RHEL 8 版本(或使用 CentOS 8)，並確保網路設定正確。&lt;/p>
&lt;blockquote>
&lt;p>RHEL 需要確認 &lt;code>subscription&lt;/code> 驗證，確保 repo 源可正常取得&lt;/p>
&lt;/blockquote>
&lt;h3 id="事前準備-1">事前準備&lt;/h3>
&lt;p>進入 &lt;code>bastion&lt;/code> 機器，安裝 jq 與 wget 工具等:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ sudo su -
$ yum install -y wget jq vim
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>關閉 bastion 防火牆:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ systemctl stop firewalld
$ systemctl disable firewalld
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;gt; 這邊方便測試，所以直接關閉 :D。&lt;/p>
&lt;p>設定與關閉 SELinux:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ vim /etc/selinux/config
&lt;span class="nv">SELINUX&lt;/span>&lt;span class="o">=&lt;/span>disabled
$ setenforce &lt;span class="m">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這邊方便測試實驗，所以直接關閉。&lt;/p>
&lt;/blockquote>
&lt;p>建立 SSH Keys:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ ssh-keygen -t rsa
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這邊方便測試，以 root 來建立。&lt;/p>
&lt;/blockquote>
&lt;p>導入以下環境變數:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DOMAIN&lt;/span>&lt;span class="o">=&lt;/span>lab.yiylin.internal
&lt;span class="nb">export&lt;/span> &lt;span class="nv">OCP_NETWORK_CIDR&lt;/span>&lt;span class="o">=&lt;/span>192.168.101.0/24
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下載 OpenShift Installer 與 CLI 工具，並解壓縮檔案到 &lt;code>/usr/local/bin/&lt;/code> 底下:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># CLI&lt;/span>
$ wget -c https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-4.8/openshift-client-linux.tar.gz -O - &lt;span class="p">|&lt;/span> tar -xz
$ mv &lt;span class="o">{&lt;/span>oc,kubectl&lt;span class="o">}&lt;/span> /usr/local/bin/
$ oc version
Client Version: 4.8.2
&lt;span class="c1"># Installer&lt;/span>
$ wget -c https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-4.8/openshift-install-linux.tar.gz -O - &lt;span class="p">|&lt;/span> tar -xz
$ mv openshift-install /usr/local/bin/
$ openshift-install version
openshift-install 4.8.2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="安裝與設定-dns-server">安裝與設定 DNS Server&lt;/h3>
&lt;p>安裝 DNS server 套件，這邊使用 &lt;code>dnsmasq&lt;/code> 來提供服務:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ yum -y install dnsmasq bind-utils
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這部分也可參考 OCP 官網安裝 &lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing_bare_metal/installing-bare-metal.html#installation-dns-user-infra-example_installing-bare-metal" target="_blank" rel="noopener"
>BIND&lt;/a>，關於不同 &lt;code>DNS Server&lt;/code> 相關配置方法，會額外補充於後續文章介紹。&lt;/p>
&lt;/blockquote>
&lt;p>編輯 &lt;code>/etc/dnsmasq.d/openshift.conf&lt;/code> 設定檔，以設定 A Record 與 PTR:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ cat &amp;lt;&amp;lt; &lt;span class="s2">&amp;#34;EOF&amp;#34;&lt;/span> &amp;gt; /etc/dnsmasq.d/openshift.conf
&lt;span class="nv">server&lt;/span>&lt;span class="o">=&lt;/span>8.8.8.8
&lt;span class="nv">domain&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,&lt;span class="si">${&lt;/span>&lt;span class="nv">OCP_NETWORK_CIDR&lt;/span>&lt;span class="si">}&lt;/span>,local
&lt;span class="c1"># A Records(api)&lt;/span>
host-record&lt;span class="o">=&lt;/span>api.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>, 192.168.101.9
host-record&lt;span class="o">=&lt;/span>api-int.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,
host-record&lt;span class="o">=&lt;/span>api-int.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.9
&lt;span class="c1"># A Records(hosts)&lt;/span>
host-record&lt;span class="o">=&lt;/span>bastion.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.9
host-record&lt;span class="o">=&lt;/span>bootstrap.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.10
host-record&lt;span class="o">=&lt;/span>master-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.21
host-record&lt;span class="o">=&lt;/span>master-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.22
host-record&lt;span class="o">=&lt;/span>master-3.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.23
host-record&lt;span class="o">=&lt;/span>worker-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.31
host-record&lt;span class="o">=&lt;/span>worker-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.32
host-record&lt;span class="o">=&lt;/span>infra-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.41
host-record&lt;span class="o">=&lt;/span>infra-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.42
host-record&lt;span class="o">=&lt;/span>infra-3.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.43
&lt;span class="c1"># A Records(etcd)&lt;/span>
host-record&lt;span class="o">=&lt;/span>etcd-0.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.21
host-record&lt;span class="o">=&lt;/span>etcd-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.22
host-record&lt;span class="o">=&lt;/span>etcd-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,192.168.101.23
srv-host&lt;span class="o">=&lt;/span>_etcd-server-ssl._tcp.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,etcd-0.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,2380,0,10
srv-host&lt;span class="o">=&lt;/span>_etcd-server-ssl._tcp.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,etcd-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,2380,0,10
srv-host&lt;span class="o">=&lt;/span>_etcd-server-ssl._tcp.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,etcd-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>,2380,0,10
&lt;span class="c1"># PTRs&lt;/span>
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/apps.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.9
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/.apps.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.9
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/api.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.9
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/api-int.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.9
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/bastion.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.9
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/bootstrap.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.10
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/master-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.21
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/master-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.22
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/master-3.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.23
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/etcd-0.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.21
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/etcd-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.22
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/etcd-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.23
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/worker-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.31
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/worker-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.32
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/infra-1.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.41
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/infra-2.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.42
&lt;span class="nv">address&lt;/span>&lt;span class="o">=&lt;/span>/infra-3.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>/192.168.101.43
EOF
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>啟動 dnsmasq 服務，並檢測 dnsmasq 設定是否正確:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ systemctl &lt;span class="nb">enable&lt;/span> dnsmasq&lt;span class="p">;&lt;/span> systemctl start dnsmasq
$ dnsmasq --test
dnsmasq: syntax check OK.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>編輯 &lt;code>/etc/resolv.conf&lt;/code> 檔案，修改 nameserver:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ cat &amp;lt;&amp;lt; &lt;span class="s2">&amp;#34;EOF&amp;#34;&lt;/span> &amp;gt; /etc/resolv.conf
nameserver 127.0.0.1
EOF
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>驗證 DNS server 正反解:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># dig domain @dns_server&lt;/span>
$ dig bastion.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span> @192.168.101.9
&lt;span class="c1"># dig -x ip @dns_server&lt;/span>
$ dig -x 192.168.101.9 @192.168.101.9
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>請驗證填寫自己對應的 &lt;code>ip address&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h3 id="安裝與設定-http-server">安裝與設定 HTTP Server&lt;/h3>
&lt;p>安裝與設定 httpd 套件:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ yum -y install httpd
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>編輯 &lt;code>/etc/httpd/conf/httpd.conf&lt;/code> 設定檔:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1">#Listen 12.34.56.78:80&lt;/span>
Listen 8080
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>因為 80 是 Ingress-http 使用，除非將 HAProxy 拆成不同節點或用 External LB。&lt;/p>
&lt;/blockquote>
&lt;p>啟動 httpd 服務:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ systemctl &lt;span class="nb">enable&lt;/span> httpd&lt;span class="p">;&lt;/span> systemctl start httpd
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="產生-openshift-ignition-fils">產生 OpenShift Ignition fils&lt;/h3>
&lt;p>建立放置 OpenShift Config 檔案的目錄:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ &lt;span class="nb">cd&lt;/span> &lt;span class="nv">$HOME&lt;/span> &lt;span class="p">;&lt;/span> mkdir &lt;span class="nv">$HOME&lt;/span>/ocp4/ignition&lt;span class="p">;&lt;/span>&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$HOME&lt;/span>/ocp4/ignition
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>建立與編輯 &lt;code>install-config.yaml&lt;/code> 檔案:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">baseDomain&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">yiylin.internal&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">compute&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">hyperthreading&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Enabled&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">worker&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">controlPlane&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hyperthreading&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Enabled&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">lab&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">networking&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">clusterNetworks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">cidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10.128.0.0&lt;/span>&lt;span class="l">/14&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">24&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">networkType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">OpenShiftSDN&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceNetwork&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">172.3.0.0&lt;/span>&lt;span class="l">/16&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">platform&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">none&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">pullSecret&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{&amp;#34;auths&amp;#34;:{ YOUR_PULL_SECRETE }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">sshKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;SSH_PUB_KEY&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>Pull secret 可在 &lt;a class="link" href="https://cloud.redhat.com/openshift/install/metal/user-provisioned" target="_blank" rel="noopener"
>Create Cluster by user provisioned&lt;/a> 取得。&lt;/li>
&lt;li>Proxy 設定，參考 &lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing_bare_metal/installing-restricted-networks-bare-metal.html#installation-configure-proxy_installing-restricted-networks-bare-metal" target="_blank" rel="noopener"
>Configuring the cluster-wide proxy during installation&lt;/a>。&lt;/li>
&lt;li>SSH Key 請自行於 &lt;code>bastion&lt;/code> 創建填寫，這裡不多做說明&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>產生 manifests 相關檔案:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ cp install-config.yaml install-config.yaml.bak
$ openshift-install create manifests --dir&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/ignition
$ ls &lt;span class="nv">$HOME&lt;/span>/ocp4/ignition
manifests openshift
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>編輯 &lt;code>manifests/cluster-scheduler-02-config.yml&lt;/code> 檔案，設定 &lt;code>mastersSchedulable&lt;/code> 值，以確保 master 不作為工作負載節點:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mastersSchedulable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>產生 OCP 使用的 Ignition files:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ openshift-install create ignition-configs --dir&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/ignition
$ ls &lt;span class="nv">$HOME&lt;/span>/ocp4/ignition
auth bootstrap.ign master.ign metadata.json worker.ign
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>撰寫方面安裝 RHCOS 的腳本 &lt;code>$HOME/ocp4/ignition/coreos-install.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">set&lt;/span> -eu
&lt;span class="nb">export&lt;/span> &lt;span class="nv">DEVICE_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DEVICE_NAME&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="p">/dev/sda&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">IGNITION_FILE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">IGNITION_FILE&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">bootstrap&lt;/span>&lt;span class="p">.ign&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># bootstrap.ign master.ign worker.ign &lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">IGNITION_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">IGNITION_URL&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">http&lt;/span>&lt;span class="p">://192.168.101.9:&lt;/span>&lt;span class="nv">8080&lt;/span>&lt;span class="p">/ignition/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">IGNITION_FILE&lt;/span>&lt;span class="si">}}&lt;/span>
sudo coreos-installer install &lt;span class="si">${&lt;/span>&lt;span class="nv">DEVICE_NAME&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --insecure-ignition &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --ignition-url&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">IGNITION_URL&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --firstboot-args rd.neednet&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --copy-network
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>複製 &lt;code>*.ign&lt;/code> 與腳本 到 &lt;code>/var/www/html/ignition&lt;/code> 目錄:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ mkdir /var/www/html/ignition
$ cp -rp &lt;span class="nv">$HOME&lt;/span>/ocp4/ignition/&lt;span class="o">{&lt;/span>*.ign,coreos-install.sh&lt;span class="o">}&lt;/span> /var/www/html/ignition
$ ls /var/www/html/ignition
bootstrap.ign master.ign worker.ign coreos-install.sh
$ chmod &lt;span class="m">664&lt;/span> -R /var/www/html/ignition/*
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="bootstrap">Bootstrap&lt;/h2>
&lt;p>透過 PVE 建立 Bootstrap 節點，並掛載 RHCOS Live ISO，並進入 Console 執行以下操作。&lt;/p>
&lt;p>首先進入系統後，先設定 Network 資訊:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ sudo nmtui
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>設定網卡資訊:&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/tJFSkiO.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/vAEtA2f.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/qINQqLa.png"
loading="lazy"
>&lt;/p>
&lt;blockquote>
&lt;p>確保網卡 IP address 設定為 &lt;code>xx.xx.xx.xx/24&lt;/code>，若沒有設定 Network mask 的話，就會用預設 &lt;code>xx.xx.xx.xx/8&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;p>重新啟動網卡設定:&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/KMvs0UZ.png"
loading="lazy"
>&lt;/p>
&lt;p>透過以下指令檢查設定結果:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ ip -4 a
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>確認網路與 DNS 都能夠被解析到。&lt;/p>
&lt;/blockquote>
&lt;p>確認沒問題後，執行以下指令來安裝 RHCOS，並設定為 Bootstrap 節點:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ curl http://192.168.101.9:8080/ignition/coreos-install.sh --output coreos-install.sh
$ chmod u+x coreos-install.sh
$ ./coreos-install.sh
&lt;span class="c1"># 安裝完成後&lt;/span>
$ lsblk -f
$ reboot
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>安裝沒問題後，重新啟動機器，並將 CD-ROM 移除。&lt;/p>
&lt;/blockquote>
&lt;p>Bootstrap 開啟完成後，回到 &lt;code>bastion&lt;/code> 節點執行以下指令來檢查部署狀況:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ openshift-install wait-for bootstrap-complete --dir&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/ignition --log-level debug
DEBUG OpenShift Installer 4.8.2
DEBUG Built from commit a5ddd2dd6c72d8a5ea0a5f17acd8b964b6a3d1be
INFO Waiting up to 20m0s &lt;span class="k">for&lt;/span> the Kubernetes API at https://api.lab.yiylin.internal:6443...
INFO API v1.21.1+051ac4f up
INFO Waiting up to 30m0s &lt;span class="k">for&lt;/span> bootstrapping to complete...
&lt;span class="c1"># 確認 openshift-api-server 以及 machine-config-server LB 可以通&lt;/span>
$ curl -k https://api-int.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>:6443
$ curl -k https://api-int.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>:22623/config/master &lt;span class="p">|&lt;/span> jq .
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>當看到此訊息時，就能並往下進行安裝 Masters。若等待過久，可以透過 bastion 進入 bootstrap 節點查看狀況:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ ssh core@bootstrap.lab.yiylin.internal
core $ sudo crictl pods
core $ sudo crictl ps -a
core $ sudo journalctl -b -f -u bootkube.service
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>正常情況 Pods 要如以下:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">POD ID CREATED STATE NAME NAMESPACE ATTEMPT RUNTIME
8101e41b16f9e 52 seconds ago Ready bootstrap-kube-scheduler-localhost kube-system 0 (default)
907d0a933771a 52 seconds ago Ready bootstrap-kube-controller-manager-localhost kube-system 0 (default)
a8b709f7caeaa 52 seconds ago Ready bootstrap-kube-apiserver-localhost kube-system 0 (default)
4eb793b3d1844 52 seconds ago Ready cloud-credential-operator-localhost openshift-cloud-credential-operator 0 (default)
49a1cdb2b25f9 52 seconds ago Ready bootstrap-cluster-version-operator-localhost openshift-cluster-version 0 (default)
c5098e42b5aa5 About a minute ago Ready bootstrap-machine-config-operator-localhost default 0 (default)
e7a3dbc6e0bc0 About a minute ago Ready etcd-bootstrap-member-localhost openshift-etcd 0 (default)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="maters">Maters&lt;/h2>
&lt;p>透過 vCenter 建立 Master 節點，並掛載 RHCOS Live ISO，並進入 Console 執行以下操作。&lt;/p>
&lt;p>首先進入系統後，先設定 Network 資訊:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ sudo nmtui
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;gt; 網路參考 Bootstrap 設定流程。&lt;/p>
&lt;p>確認沒問題後，執行以下指令來安裝 RHCOS，並設定為 Masters 節點:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ curl http://192.168.101.9:8080/ignition/coreos-install.sh --output coreos-install.sh
$ chmod u+x coreos-install.sh
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">IGNITION_FILE&lt;/span>&lt;span class="o">=&lt;/span>master.ign
$ ./coreos-install.sh
&lt;span class="c1"># 安裝完後&lt;/span>
$ reboot
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>安裝沒問題後，重新啟動機器，並將 CD-ROM 移除。&lt;/p>
&lt;/blockquote>
&lt;p>Masters 都開啟完成後，回到 &lt;code>bastion&lt;/code> 節點執行以下指令來檢查部署狀況:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ openshift-install wait-for bootstrap-complete --dir&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/ignition --log-level debug
...
INFO Waiting up to 30m0s &lt;span class="k">for&lt;/span> bootstrapping to complete...
DEBUG Bootstrap status: &lt;span class="nb">complete&lt;/span>
INFO It is now safe to remove the bootstrap resources
INFO Time elapsed: 0s
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在 &lt;code>bastion&lt;/code> 執行以下指令來查看叢集狀況:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ cp &lt;span class="nv">$HOME&lt;/span>/ocp4/ignition/auth/kubeconfig &lt;span class="nv">$HOME&lt;/span>/ocp4/kubeconfig
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">KUBECONFIG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/kubeconfig
$ oc get csr
NAME AGE SIGNERNAME REQUESTOR CONDITION
csr-9xqqd 25m kubernetes.io/kubelet-serving system:node:etcd-1 Approved,Issued
csr-gzvwr 27m kubernetes.io/kubelet-serving system:node:etcd-0 Approved,Issued
csr-j6npt 25m kubernetes.io/kubelet-serving system:node:etcd-2 Approved,Issued
csr-mxqkf 25m kubernetes.io/kube-apiserver-client-kubelet system:serviceaccount:openshift-machine-config-operator:node-bootstrapper Approved,Issued
csr-tth9f 28m kubernetes.io/kube-apiserver-client-kubelet system:serviceaccount:openshift-machine-config-operator:node-bootstrapper Approved,Issued
csr-zx9q8 25m kubernetes.io/kube-apiserver-client-kubelet system:serviceaccount:openshift-machine-config-operator:node-bootstrapper Approved,Issued
system:openshift:openshift-authenticator 25m kubernetes.io/kube-apiserver-client system:serviceaccount:openshift-authentication-operator:authentication-operator Approved,Issued
$ oc get no
NAME STATUS ROLES AGE VERSION
master-1.lab.yiylin.internal Ready master 31m v1.21.1+051ac4f
master-2.lab.yiylin.internal Ready master 15m v1.21.1+051ac4f
master-3.lab.yiylin.internal Ready master 10m v1.21.1+051ac4f
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>完成後，即可進行 Workers 與 Infras 部署，並移除 Bootstrap。若等待過久，可以透過 bastion 進入 masters 節點查看狀況:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ ssh core@maste-1.lab.yiylin.internal
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="workers-amp-infras">Workers &amp;amp; Infras&lt;/h2>
&lt;p>透過 vCenter 建立 Workers &amp;amp; Infras 節點，並掛載 RHCOS Live ISO，並進入 Console 執行以下操作。&lt;/p>
&lt;p>首先進入系統後，先設定 Network 資訊:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ sudo nmtui
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>網路參考 Bootstrap 設定流程。&lt;/p>
&lt;/blockquote>
&lt;p>確認沒問題後，執行以下指令來安裝 RHCOS，並設定為 Workers &amp;amp; Infras 節點:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ curl http://192.168.101.9:8080/ignition/coreos-install.sh --output coreos-install.sh
$ chmod u+x coreos-install.sh
$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">IGNITION_FILE&lt;/span>&lt;span class="o">=&lt;/span>worker.ign
$ ./coreos-install.sh
&lt;span class="c1"># 安裝完成後&lt;/span>
$ lsblk -f
$ reboot
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>安裝沒問題後，重新啟動機器，並將 CD-ROM 移除。&lt;/p>
&lt;/blockquote>
&lt;p>Workers &amp;amp; Infras 都開啟完成後，就可以回到 &lt;code>bastion&lt;/code> 節點執行以下指令來檢查部署狀況:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ openshift-install wait-for install-complete --dir&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/ignition --log-level debug
DEBUG OpenShift Installer 4.8.2
DEBUG Built from commit a5ddd2dd6c72d8a5ea0a5f17acd8b964b6a3d1be
DEBUG Loading Install Config...
DEBUG Loading SSH Key...
DEBUG Loading Base Domain...
DEBUG Loading Platform...
DEBUG Loading Cluster Name...
DEBUG Loading Base Domain...
DEBUG Loading Platform...
DEBUG Loading Networking...
DEBUG Loading Platform...
DEBUG Loading Pull Secret...
DEBUG Loading Platform...
DEBUG Using Install Config loaded from state file
INFO Waiting up to 40m0s &lt;span class="k">for&lt;/span> the cluster at https://api.lab.yiylin.internal:6443 to initialize...
DEBUG Still waiting &lt;span class="k">for&lt;/span> the cluster to initialize: Some cluster operators are still updating: authentication, console, ingress, monitoring
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>出現 &lt;code>DEBUG&lt;/code> 即可往下操作，因為這部分會需要下載 Images 會比較久&lt;/p>
&lt;/blockquote>
&lt;p>開啟一個新的 Terminal，在 &lt;code>bastion&lt;/code> 節點 Approve workers CSR:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">KUBECONFIG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/kubeconfig
$ oc get csr -ojson &lt;span class="p">|&lt;/span> jq -r .items&lt;span class="o">[]&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="k">select&lt;/span>&lt;span class="o">(&lt;/span>.status &lt;span class="o">==&lt;/span> &lt;span class="o">{}&lt;/span> &lt;span class="o">)&lt;/span> &lt;span class="p">|&lt;/span> .metadata.name &lt;span class="p">|&lt;/span> xargs oc adm certificate approve
&lt;span class="c1"># 確認機器都起來&lt;/span>
$ oc get no
NAME STATUS ROLES AGE VERSION
infra0 Ready worker 12m v1.21.1+051ac4f
infra1 Ready worker 12m v1.21.1+051ac4f
infra2 Ready worker 12m v1.21.1+051ac4f
master0 Ready master 11h v1.21.1+051ac4f
master1 Ready master 11h v1.21.1+051ac4f
master2 Ready master 11h v1.21.1+051ac4f
worker0 Ready worker 12m v1.21.1+051ac4f
worker1 Ready worker 12m v1.21.1+051ac4f
worker2 Ready worker 12m v1.21.1+051ac4f
worker3 Ready worker 12m v1.21.1+051ac4f
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="搬移資源至-infra-nodes">搬移資源至 Infra nodes&lt;/h3>
&lt;p>接著要將 Worker 與 Infra 角色做拆分，確保系統與 Operator 服務不影響業務服務的負載，參考 &lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/machine_management/creating-infrastructure-machinesets.html#infrastructure-components_creating-infrastructure-machinesets" target="_blank" rel="noopener"
>Creating infrastructure machine sets&lt;/a>&lt;/p>
&lt;p>設定 infra nodes 的 labels:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ &lt;span class="k">for&lt;/span> i in &lt;span class="o">{&lt;/span>1..2&lt;span class="o">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
oc label node worker-&lt;span class="si">${&lt;/span>&lt;span class="nv">i&lt;/span>&lt;span class="si">}&lt;/span> node-role.kubernetes.io/app&lt;span class="o">=&lt;/span> --overwrite
&lt;span class="k">done&lt;/span>
$ &lt;span class="k">for&lt;/span> i in &lt;span class="o">{&lt;/span>1..3&lt;span class="o">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
oc label node infra-&lt;span class="si">${&lt;/span>&lt;span class="nv">i&lt;/span>&lt;span class="si">}&lt;/span> node-role.kubernetes.io/infra&lt;span class="o">=&lt;/span> --overwrite
oc label node infra-&lt;span class="si">${&lt;/span>&lt;span class="nv">i&lt;/span>&lt;span class="si">}&lt;/span> node-role.kubernetes.io/worker-
&lt;span class="k">done&lt;/span>
$ oc get no
NAME STATUS ROLES AGE VERSION
infra-1.lab.yiylin.internal Ready infra 31m v1.21.1+051ac4f
infra-2.lab.yiylin.internal Ready infra 31m v1.21.1+051ac4f
infra-3.lab.yiylin.internal Ready infra 31m v1.21.1+051ac4f
master-1.lab.yiylin.internal Ready master 156m v1.21.1+051ac4f
master-2.lab.yiylin.internal Ready master 140m v1.21.1+051ac4f
master-3.lab.yiylin.internal Ready master 135m v1.21.1+051ac4f
worker-1.lab.yiylin.internal Ready app,worker 31m v1.21.1+051ac4f
worker-2.lab.yiylin.internal Ready app,worker 31m v1.21.1+051ac4f
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>編輯 &lt;code>Scheduler&lt;/code> 物件，並調整預設 &lt;code>NodeSelector&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ oc edit scheduler cluster
...
spec:
defaultNodeSelector: node-role.kubernetes.io/app&lt;span class="o">=&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>建立 Infra 機器的 Machine Config Pool 檔案:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ cat &lt;span class="p">&amp;amp;&lt;/span>lt&lt;span class="p">;&amp;amp;&lt;/span>lt&lt;span class="p">;&lt;/span>EOF &lt;span class="p">|&lt;/span> oc apply -f -
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfigPool
metadata:
name: infra
spec:
machineConfigSelector:
matchExpressions:
- key: machineconfiguration.openshift.io/role
operator: In
values:
- worker
- infra
nodeSelector:
matchLabels:
node-role.kubernetes.io/infra:
EOF
$ oc get mcp
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這時 Infra 節點會重新啟動。&lt;/p>
&lt;/blockquote>
&lt;p>搬移 Router 元件至 Infra 節點上:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ oc edit IngressController default -n openshift-ingress-operator
...
spec:
nodePlacement:
nodeSelector:
matchLabels:
node-role.kubernetes.io/infra:
replicas: &lt;span class="m">2&lt;/span>
$ oc -n openshift-ingress get pod -o wide
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>搬移 Image Registry 元件至 Infra 節點上:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ oc edit configs.imageregistry.operator.openshift.io/cluster
...
spec:
nodeSelector:
node-role.kubernetes.io/infra:
...
$ oc -n openshift-image-registry get pods -o wide
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>搬移 Monitoring 元件至 Infra 節點上:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ cat &amp;lt;&amp;lt; &lt;span class="s2">&amp;#34;EOF&amp;#34;&lt;/span> &amp;gt; oc apply -f -
apiVersion: v1
kind: ConfigMap
metadata:
name: cluster-monitoring-config
namespace: openshift-monitoring
data:
config.yaml: &lt;span class="p">|&lt;/span>+
alertmanagerMain:
nodeSelector:
node-role.kubernetes.io/infra:
prometheusK8s:
nodeSelector:
node-role.kubernetes.io/infra:
prometheusOperator:
nodeSelector:
node-role.kubernetes.io/infra:
grafana:
nodeSelector:
node-role.kubernetes.io/infra:
k8sPrometheusAdapter:
nodeSelector:
node-role.kubernetes.io/infra:
kubeStateMetrics:
nodeSelector:
node-role.kubernetes.io/infra:
telemeterClient:
nodeSelector:
node-role.kubernetes.io/infra:
openshiftStateMetrics:
nodeSelector:
node-role.kubernetes.io/infra:
thanosQuerier:
nodeSelector:
node-role.kubernetes.io/infra:
EOF
$ watch -n 0.1 oc -n openshift-monitoring get pod -o wide
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;gt; 其他資源請參考 &lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/machine_management/creating-infrastructure-machinesets.html#infrastructure-moving-logging_creating-infrastructure-machinesets" target="_blank" rel="noopener"
>Moving OpenShift Logging resources&lt;/a> 搬移。&lt;/p>
&lt;p>叢集初始化會需要一點時間，完成後就可以透過 Console 查看整體狀況。&lt;/p>
&lt;h2 id="web-console">Web Console&lt;/h2>
&lt;p>透過 oc 取得 Web console 的 route URL:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ oc -n openshift-console get route console -o&lt;span class="o">=&lt;/span>&lt;span class="nv">jsonpath&lt;/span>&lt;span class="o">={&lt;/span>.spec.host&lt;span class="o">}{&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="o">}&lt;/span>
console-openshift-console.apps.lab.yiylin.internal
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>取得 OpenShift 的 &lt;code>kubeadmin&lt;/code> 密碼:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">$ cat &lt;span class="nv">$HOME&lt;/span>/ocp4/ignition/auth/kubeadmin-password
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/7ykeVUc.png"
loading="lazy"
>&lt;/p>
&lt;hr>
&lt;h2 id="terminal-login">Terminal Login&lt;/h2>
&lt;p>開啟一個新的 Terminal，在 bastion 節點配置 &lt;code>KUBECONFIG&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ &lt;span class="nb">export&lt;/span> &lt;span class="nv">KUBECONFIG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/ocp4/kubeconfig
$ oc get no
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/openshift/machine-config-operator/blob/master/docs/custom-pools.md" target="_blank" rel="noopener"
>https://github.com/openshift/machine-config-operator/blob/master/docs/custom-pools.md&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gist.github.com/kairen/894348c6281f33a981b528e69c3d06bf" target="_blank" rel="noopener"
>https://gist.github.com/kairen/894348c6281f33a981b528e69c3d06bf&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing_vsphere/installing-restricted-networks-vsphere.html" target="_blank" rel="noopener"
>https://docs.openshift.com/container-platform/4.8/installing/installing_vsphere/installing-restricted-networks-vsphere.html&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/sec-bind" target="_blank" rel="noopener"
>Networking Guide - BIND (Berkeley Internet Name Domain)&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://docs.openshift.com/container-platform/4.8/installing/installing_bare_metal_ipi/ipi-install-prerequisites.html" target="_blank" rel="noopener"
>參考 IPI Prerequisites&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Deep dive - OpenShift 叢集節點跨網段架構規劃</title><link>https://blog.yylin.io/openshift/security-zones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.yylin.io/openshift/security-zones/</guid><description>&lt;h2 id="概述-為什麼有這樣需求">/概述/ 為什麼有這樣需求？&lt;/h2>
&lt;p>近期剛好接觸客戶需求，希望能透過「單一叢集OpenSihft 運作於跨網段區域」上架構需求，希望有基於能限制不同角色，訪問流量進入 OpenShift 叢集只允許使用特定功能，包含以下需求：&lt;/p>
&lt;ol>
&lt;li>能限制只有叢集管理人員/開發團隊，能直接存取操作 OpenShift 叢集於內部網路中，因此叢集對應的內部服務、API、儲存等，能獲得更多更安全性。&lt;/li>
&lt;li>將提供外部應用程式/服務，隔離於對外 Security Zones 區域，並限制只允許特定的 Router 使用某些特定功能(例如：單純網站服務運行, APP 後端服務)等。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>主要目的：希望透過 Shard Route 負責，在不同 IP 地址，讓內部和外部使用者訪問不同的 Router 以達到 DMZ 與 OCP 訪問限制，來減少成本下能更加提升叢集運作安全性。&lt;/p>
&lt;/blockquote>
&lt;p>補充 - 更多場景情境，歡迎大家可以參考 Luis Javier Arizmendi Alonso 分享針對 OpenShift 於 Security Zones 系列文章 - &lt;a class="link" href="https://itnext.io/security-zones-in-openshift-worker-nodes-part-i-introduction-4f85762962d7" target="_blank" rel="noopener"
>Security Zones in OpenShift worker nodes&lt;/a>&lt;/p>
&lt;h2 id="探討--相關架構考量">/探討/ 相關架構考量&lt;/h2>
&lt;p>先探討結論，為什麼不採用「針對 Security Zones 進行實體隔離」來達到企業內部制定相對安全標準和法規，例如直接在 DMZ 區域多部署一座 OpenShift 叢集提供對外服務，更直接保護叢集運行產品的應用及服務更能確保安全性，其實重點包含&lt;code>成本考量&lt;/code>還有 &lt;code>OpenShift維護成本&lt;/code>高，可能企業內部需要更多維運人員來管理不同 OpenShift 叢集上版流程、應用程式、API及相關服務配置管理等，都是總總問題。&lt;/p>
&lt;p>所以或許另一種選擇，透過有一個大型的 OpenShift「&lt;code>單一叢集跨網段架構&lt;/code>」能使更容易維運管理及同時達到提高安全性架構，就是此次架構分享重點。&lt;/p>
&lt;blockquote>
&lt;p>這邊還是一個重點，取決於你對於當前環境規劃與架構設計需求而做選擇&lt;/p>
&lt;/blockquote>
&lt;p>以下針對架構圖做細部「單一叢集跨網段架構」探討：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/PHuCv7u.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>每座 OpenShift 叢集都應被視為僅在內部管理，而不是暴露於外部 Internet&lt;/li>
&lt;li>若劃分 Infra Nodes 創建在不同的 Zone 區域中，每個區域中提供使用者運行 Ingress 等應用及 Services 服務的 Pod&lt;/li>
&lt;li>將限制使用者無法訪問或直接使用其他叢集區域中的資源，直接保護這些節點及組件。
&lt;ul>
&lt;li>例如：Master API, Logging, Metrics, Registry 等應該運行於內部 Internet&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>針對特定 Zone 區域運行應用，如果有特定服務需求，可以使用 node-selectors 將 Pod 實體隔離到特定 Worker 節點
&lt;ul>
&lt;li>例如：上圖 Pod 跑在特定「藍色節點」上，只能單獨在藍色區域節點運行 Pod&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="單一叢集-opensihft-運作於跨網段區域">單一叢集 OpenSihft 運作於跨網段區域&lt;/h2>
&lt;p>下圖 - 為-驗證規劃 OpenShift 示意圖：&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/6GgowkZ.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="操作步驟">操作步驟&lt;/h2>
&lt;ol>
&lt;li>需創建對外服務的 Ingress Controller 要如何配置規範&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Infra 節點依據網段區域定義標籤&lt;/li>
&lt;li>DNS 配置對外 External Service 使用的 WildCard&lt;/li>
&lt;li>創建 Ingress Controller 指派為外部應用使用&lt;/li>
&lt;li>設置 route 透過標籤指派運行於對外區域的 infra 節點&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>服務與應用程式部署完成後，對外的 Router 要定義經過哪一個 Ingress 節點去提供服務&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>修改預設 Ingress Controller - default 配置不讓其他 Service 服務進入&lt;/li>
&lt;li>新增對外服務的 Ingress Controller - service 如何配置&lt;/li>
&lt;/ul>
&lt;h3 id="1-dns-配置對外-external-service-使用的-wildcard">1. DNS 配置對外 External Service 使用的 WildCard&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Usage&lt;/th>
&lt;th>FQDN&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Kubernetes API&lt;/td>
&lt;td>api.&amp;lt;cluster_name&amp;gt;.&amp;lt;base_domain&amp;gt;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Internal API&lt;/td>
&lt;td>api-int.&amp;lt;cluster_name&amp;gt;.&amp;lt;base_domain&amp;gt;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ingress route&lt;/td>
&lt;td>*.apps.&amp;lt;cluster_name&amp;gt;.&amp;lt;base_domain&amp;gt;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Application, External Service&lt;/td>
&lt;td>*.service.&amp;lt;cluster_name&amp;gt;.&amp;lt;base_domain&amp;gt;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="2-將-router-固定到-infra-node">2. 將 Router 固定到 Infra Node&lt;/h3>
&lt;ul>
&lt;li>將 Infra Node 依據服務提供區 Zone 1, Zone 2，指定標籤 (範例配置, region=8, region=10)&lt;/li>
&lt;li>在 IngressController 對象的 matchLabels 中指定 Label 設置為對應 Infra Node&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc label nodes &amp;lt;INFRA_NODE&amp;gt; region=8
$ oc patch ingresscontroller/default -n openshift-ingress-operator --type=merge -p &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;nodePlacement&amp;#34;: {&amp;#34;nodeSelector&amp;#34;: {&amp;#34;matchLabels&amp;#34;: {&amp;#34;region&amp;#34;: &amp;#34;8&amp;#34;}}}}}&amp;#39;
apiVersion: operator.openshift.io/v1
kind: IngressController
metadata:
name: default
namespace: openshift-ingress-operator
spec:
replicas: 3
nodePlacement:
nodeSelector:
matchLabels:
region: &amp;#34;8&amp;#34;
$ oc label nodes &amp;lt;INFRA_NODE&amp;gt; region=10
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>檢查節點 label 狀態&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ oc get node -A --show-labels
NAME STATUS ROLES AGE VERSION LABELS
infra-1.ocp4.lab.example.com Ready worker 60d v1.23.5+3afdacb &lt;span class="nv">region&lt;/span>&lt;span class="o">=&lt;/span>8, beta.kubernetes.io/arch&lt;span class="o">=&lt;/span>amd64,...
infra-2.ocp4.lab.example.com Ready worker 60d v1.23.5+3afdacb &lt;span class="nv">region&lt;/span>&lt;span class="o">=&lt;/span>8, beta.kubernetes.io/arch&lt;span class="o">=&lt;/span>amd64,...
infra-3.ocp4.lab.example.com Ready worker 60d v1.23.5+3afdacb &lt;span class="nv">region&lt;/span>&lt;span class="o">=&lt;/span>8, beta.kubernetes.io/arch&lt;span class="o">=&lt;/span>amd64,...
infra-4.ocp4.lab.example.com Ready worker 60d v1.23.5+3afdacb &lt;span class="nv">region&lt;/span>&lt;span class="o">=&lt;/span>10, beta.kubernetes.io/arch&lt;span class="o">=&lt;/span>amd64,...
infra-5.ocp4.lab.example.com Ready worker 60d v1.23.5+3afdacb &lt;span class="nv">region&lt;/span>&lt;span class="o">=&lt;/span>10, beta.kubernetes.io/arch&lt;span class="o">=&lt;/span>amd64,...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-創建-ingress-controller-指派為外部應用使用">3. 創建 Ingress Controller 指派為外部應用使用&lt;/h3>
&lt;ul>
&lt;li>創建命名為 “Service” 的 Ingress Controller(Router) 將允許從外部訪問的應用程式或服務，引流到對應的 Ingress&lt;/li>
&lt;li>如下圖 (指定的 Label region: ‘10’ )為對外使用的網域&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ cat ingress-service.yaml
apiVersion: operator.openshift.io/v1
kind: IngressController
metadata:
name: service
namespace: openshift-ingress-operator
spec:
replicas: 2
domain: service.ocp4.lab.example.com
nodePlacement:
nodeSelector:
matchLabels:
region: &amp;#39;10&amp;#39;
routeSelector:
matchExpressions:
- key: type
operator: In
values:
- service
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>這邊指定對外 External Service 使用的網域&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>設置 ingress&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc apply -f ingress-service.yaml
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-限制對內對外服務-ingress-controller-配置">4. 限制對內對外服務 Ingress Controller 配置&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/rAARkR1.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>修改預設 Ingress Controller - default 配置不讓其他 Service 服務進入&lt;/li>
&lt;li>新增對外服務的 Ingress Controller - service 如何配置&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>設定 Ingress Controller - service 指定 service 服務可以進入&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc edit ingresscontroller service -n openshift-ingress-operator
apiVersion: operator.openshift.io/v1
kind: IngressController
metadata:
name: service
namespace: openshift-ingress-operator
spec:
replicas: 2
domain: service.ocp4.lab.example.com
nodePlacement:
nodeSelector:
matchLabels:
region: &amp;#39;10&amp;#39;
routeSelector:
matchExpressions:
- key: type
operator: In
values:
- service
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>檢查 Ingress Controller - default 限制不讓 service 服務進入&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc edit ingresscontroller default -n openshift-ingress-operator
apiVersion: operator.openshift.io/v1
kind: IngressController
metadata:
name: service
namespace: openshift-ingress-operator
spec:
replicas: 3
domain: apps.ocp4.lab.example.com
nodePlacement:
nodeSelector:
matchLabels:
region: &amp;#34;8&amp;#34;
routeSelector:
matchExpressions:
- key: type
operator: NotIn
values:
- service
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="5-部署應用生成-route-並指定其-hostname和-label-typeservice">5. 部署應用，生成 Route 並指定其 Hostname和 Label (type=service)&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc new-project demo
$ oc new-app rails-postgresql-example
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc get pod -o wide
NAME READY STATUS RESTARTS AGE IP NODE
postgresql-1-deploy 0/1 Completed 0 2d20h 10.129.6.16 worker-3.ocp4.lab.example.com
postgresql-1-hjztg 1/1 Running 0 2d20h 10.129.4.98 worker-2.ocp4.lab.example.com
rails-postgresql-example-1-build 0/1 Completed 0 2d20h 10.129.4.97 worker-2.ocp4.lab.example.com
rails-postgresql-example-1-deploy 0/1 Completed 0 2d19h 10.129.8.9 infra-1.ocp4.lab.example.com
rails-postgresql-example-1-f8w4l 1/1 Running 0 2d19h 10.129.3.18 worker-1.ocp4.lab.example.com
rails-postgresql-example-1-hook-pre 0/1 Completed 0 2d19h 10.129.3.17 worker-1.ocp4.lab.example.com
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>在創建 route 的時候需指定 hostname，不可使用預設名稱，此部分跳過說明，可以看到如以下 route domain 為 &lt;code>.service.ocp4.lab.example.com&lt;/code> 結尾。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc get route
NAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD
rails-postgresql-example rails-postgresql-example-demo.service.ocp4.lab.example.com rails-postgresql-example &amp;lt;all&amp;gt; None
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>#指定 label 讓 rails-postgresql-example 的 route 地址與設置解析&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc label route rails-postgresql-example type=service
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="6-訪問-ap-的-route-地址確認狀態可以訪問">6. 訪問 AP 的 Route 地址，確認狀態可以訪問&lt;/h3>
&lt;ul>
&lt;li>預設應用及服務走 default 網頁會讀取不到&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc label route rails-postgresql-example type-
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/2sld746.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>增加外部服務對應 label (如範例 type=service)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ oc label route rails-postgresql-example type=service
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i.imgur.com/gDe472U.jpg"
loading="lazy"
>&lt;/p>
&lt;h2 id="reference">Reference&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://rcarrata.com/openshift/ocp4_route_sharding/" target="_blank" rel="noopener"
>Deep dive of Route Sharding in OpenShift 4&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://itnext.io/security-zones-in-openshift-worker-nodes-part-i-introduction-4f85762962d7" target="_blank" rel="noopener"
>Security Zones in OpenShift worker nodes — Part I — Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/weixin_43902588/article/details/103543191?spm=1001.2014.3001.5502" target="_blank" rel="noopener"
>OpenShift 4 - Ingress、Route與Shard&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>